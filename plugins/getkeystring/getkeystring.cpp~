
#include "../../v8.h"
#if defined _WIN32
    #include "SDL/SDL.h"
#else
    #include "/usr/include/SDL/SDL.h"
#endif

#include <string>

#define CHECK_ARG_INT(index, name) \
    if (!args[index]->IsNumber()) { \
        return v8::ThrowException(v8::String::New(name));\
    }

#define CHECK_ARG_BOOL(index, name) \
    if (!args[index]->IsBoolean()) { \
        return v8::ThrowException(v8::String::New(name));\
    } \

extern "C" char *  Init(void);
extern "C" int     GetNumFunctions(void);
extern "C" void ** GetFunctions(void);
extern "C" char ** GetFunctionNames(void);
extern "C" v8::Handle<v8::Value> GetKeyString(const v8::Arguments& args);

void * GetKeyStringPointer = (void *)((v8::Handle<v8::Value> (*)(const v8::Arguments& args))(GetKeyString));

char * Init(void){
    return (char*)"GetKeyString";
}

int GetNumFunctions(void){
    return 1;
}

void ** GetFunctions(void){
    void ** funcs = (void**)calloc(1, sizeof(void*));
    funcs[0]=GetKeyStringPointer;
    return funcs;
}

char ** GetFunctionNames(void){
    char ** names = (char**)calloc(1, sizeof(char*));
    names[0]=(char *)"GetKeyString";
    return names;
}

v8::Handle<v8::Value> GetKeyString(const v8::Arguments& args){
	if(args.Length()<1){
        return v8::ThrowException(v8::String::New("GetKeyString Error: Called with no arguments"));
	}
	CHECK_ARG_INT(0, "GetKeyString Error: Argument 0 is not a number.");

    bool shift = false;

	if(args.Length()>1){
        CHECK_ARG_BOOL(1, "GetKeyString Error: Argument 1 is not a boolean.");
        if(args[1]->v8::Value::BooleanValue()){
            shift = true;
        }
	}

    unsigned int keynum = args[0]->v8::Value::Int32Value();

    if(keynum>256){
        return v8::String::New("Bad Key Value");
    }

    if(shift){
        keynum = toupper(keynum);
    }

    std::string key(1, keynum);
    //printf("Well Well.\n");
    return v8::String::New(key.c_str());
}
