#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.138                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS =  -fPIC -Wdeprecated-declarations 
RESINC = 
LIBDIR = 
LIB = -lGL -lGLU -lX11 -lSDL -lSDL_image -ldl -lpthread
LDFLAGS = -shared

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG =  $(LDFLAGS) -fPIC -shared
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/graphicSDL.so

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O3 -fpic -pedantic-errors -Wall -fexceptions -msse2 -march=native
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  $(LDFLAGS) -s -shared
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = ../../bin/Release/plugin/SDL_GL.so

OBJ_DEBUG = $(OBJDIR_DEBUG)/color.o $(OBJDIR_DEBUG)/screen.o $(OBJDIR_DEBUG)/primitives.o $(OBJDIR_DEBUG)/main.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/color.o $(OBJDIR_RELEASE)/screen.o $(OBJDIR_RELEASE)/primitives.o $(OBJDIR_RELEASE)/main.o

all: release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	cp ../../bin/Release/graphiccommon.so ./graphiccommon.co
	cp ../../bin/Release/graphicalg.so ./graphicalg.co

after_debug: 
	rm -rf ./graphiccommon.so
	rm -rf ./graphicalg.so

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LIBDIR_DEBUG) $(OBJ_DEBUG)  -o $(OUT_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/graphic.o: graphic.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c graphic.cpp -o $(OBJDIR_DEBUG)/graphic.o 

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d ../../bin/Release/plugin || mkdir -p ../../bin/Release/plugin
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	cp ../../bin/Release/graphiccommon.so ./graphiccommon.so
	cp ../../bin/Release/graphicalg.so ./graphicalg.so

after_release: 
	rm -rf ./graphiccommon.so
	rm -rf ./graphicalg.so

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/primitives.o: primitives.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c primitives.cpp -o $(OBJDIR_RELEASE)/primitives.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o
	
$(OBJDIR_RELEASE)/screen.o: screen.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c screen.cpp -o $(OBJDIR_RELEASE)/screen.o
	
$(OBJDIR_RELEASE)/color.o: color.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c color.cpp -o $(OBJDIR_RELEASE)/color.o

	
clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release/plugin
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

