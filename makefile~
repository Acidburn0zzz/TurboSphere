#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.137                       #
#------------------------------------------------------------------------------#

WORKDIR = `pwd`



CC = gcc
CXX = g++
AR = ar
LD = g++

ARCH =: $(shell uname -m)

WINDRES = windres

INC = 
CFLAGS =  -Wall -O3
RESINC = 
LIBDIR = 
LIB =  -lSDL -ldl -lpthread -lSDL_mixer -lSDL_ttf -lSDL_image ./libt5.so ./libv8.so ./graphiccommon.so ./graphicalg.so ./configmanager.so
LDFLAGS =

INC_T5 = 
CFLAGS_T5 = -fpic -Os -pedantic-errors -Wall -fexceptions
RESINC_T5 = 
LIBDIR_T5 = 
LIB_T5 =
LDFLAGS_T5 = -shared

INC_PLG = 
CFLAGS_PLG = -fpic -O3 -Wall -fexceptions
RESINC_PLG = 
LIBDIR_PLG = 
LIB_PLG =
LDFLAGS_PLG = -shared

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS)
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/turbosphere

OBJ_RELEASE = $(OBJDIR_RELEASE)/variableregister.o $(OBJDIR_RELEASE)/loadplugins.o $(OBJDIR_RELEASE)/functionload.o $(OBJDIR_RELEASE)/engine.o

INC_RELEASE_T5 =  $(INC_T5)
CFLAGS_RELEASE_T5 =  $(CFLAGS_T5)
RESINC_RELEASE_T5 =  $(RESINC_T5)
RCFLAGS_RELEASE_T5 =  $(RCFLAGS_T5)
LIBDIR_RELEASE_T5 =  $(LIBDIR_T5)
LIB_RELEASE_T5 = $(LIB_T5)
LDFLAGS_RELEASE_T5 =  $(LDFLAGS_T5) -s
OBJDIR_RELEASE_T5 = obj/Release
DEP_RELEASE_T5 = 
OUT_RELEASE_T5 = ./libt5.so
OUT_RELEASE_T5_ONLY = bin/Release/libt5.so

OBJ_RELEASE_T5 = $(OBJDIR_RELEASE_T5)/t5.a
OBJ_RELEASE_T5_only = $(OBJDIR_RELEASE_T5)/t5/t5.a


INC_RELEASE_PLG =  $(INC_PLG)
CFLAGS_RELEASE_PLG =  $(CFLAGS_PLG)
RESINC_RELEASE_PLG =  $(RESINC_PLG)
RCFLAGS_RELEASE_PLG =  $(RCFLAGS_PLG)
LIBDIR_RELEASE_PLG =  $(LIBDIR_PLG)
LIB_RELEASE_PLG = $(LIB_PLG)
LDFLAGS_RELEASE_PLG =  $(LDFLAGS_PLG) -s
OBJDIR_RELEASE_PLG = obj/Release

all: release plugins

clean: clean_release

plugins: getkeystring graphic input bmpfont ttffont windowstyle scriptfs

release: before_release t5dyn libs out_release after_release

libs: graphiccommon graphicalg configmanager

getkeystring:
	(cd plugins/getkeystring;make)

graphic:
	(cd plugins/graphicSDL;make)

input:
	(cd plugins/inputSDL;make)
	
bmpfont:
	(cd plugins/bmpfontSDL;make)
	
ttffont:
	(cd plugins/ttffontSDL;make)

windowstyle:
	(cd plugins/windowstyleSDL;make)
	
scriptfs:
	(cd plugins/scriptfs;make)

graphiccommon:
	(cd graphiccommon;make)
	cp bin/Release/graphiccommon.so ./graphiccommon.so

graphicalg:
	(cd graphicalg;make)
	cp bin/Release/graphicalg.so ./graphicalg.so

configmanager:
	(cd configmanager;make)
	cp bin/Release/configmanager.so ./configmanager.so
	
engine: before_release t5dyn out_release after_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 
	mv $(WORKDIR)/libt5.so $(WORKDIR)/bin/Release/libt5.so
	rm ./configmanager.so
	rm ./graphicalg.so
	rm ./graphiccommon.so
	
before_release_t5: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE_T5) || mkdir -p $(OBJDIR_RELEASE_T5)

after_release_t5:

not5: before_release out_release after_release

t5: before_release t5dyn after_release

t5dyn: $(OBJ_RELEASE_T5) $(DEP_RELEASE_T5)
	$(LD) $(LDFLAGS_RELEASE_T5) $(LIBDIR_RELEASE_T5) $(OBJ_RELEASE_T5) $(LIB_RELEASE_T5) -o $(OUT_RELEASE_T5)

$(OBJDIR_RELEASE)/t5.a: t5.cpp
	$(CXX) $(CFLAGS_RELEASE_T5) $(INC_RELEASE_T5) -c t5.cpp -o $(OBJDIR_RELEASE_T5)/t5.a

out_release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE) -o $(OUT_RELEASE)

$(OBJDIR_RELEASE)/engine.o: engine.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c engine.cpp -o $(OBJDIR_RELEASE)/engine.o

$(OBJDIR_RELEASE)/functionload.o: functionload.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c functionload.cpp -o $(OBJDIR_RELEASE)/functionload.o
	
$(OBJDIR_RELEASE)/variableregister.o: variableregister.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c variableregister.cpp -o $(OBJDIR_RELEASE)/variableregister.o	
	
$(OBJDIR_RELEASE)/loadplugins.o: loadplugins.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c loadplugins.cpp -o $(OBJDIR_RELEASE)/loadplugins.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release/turbosphere
	rm -rf bin/Release/libt5.so
	rm -rf $(OBJDIR_RELEASE)
	rm -rf configmanager/obj
	rm -rf graphiccommon/obj
	rm -rf plugins/graphicSDL/obj
	rm -rf plugins/bmpfontSDL/obj
	rm -rf plugins/ttffontSDL/obj
	rm -rf plugins/scriptfs/obj
	rm -rf plugins/getkeystring/obj
	rm -rf plugins/inputSDL/obj
	rm -rf bin/Release/configmanager.so
	rm -rf bin/Release/graphicalg.so
	rm -rf bin/Release/graphiccommon.so
	rm -rf bin/Release/plugin
	rm -f ./configmanager.so
	rm -f ./graphicalg.so
	rm -f ./graphiccommon.so
	
.PHONY: before_release after_release copylibs clean_release before_release_t5 after_release_t5 libs graphicalg graphiccommon configmanager
