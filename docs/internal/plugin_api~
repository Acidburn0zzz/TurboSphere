TurboSphere Plugin API
Martin McDonough
2013.01.19

Last Update
2013.03.13 - TS v0.2rc1

Plugins are Dynamic Libraries (.so files in unix, .dll files in windows). All exposed functions must be declared with C linkage, as they are linked at run time. The following functions must be defined for the plugin to be valid:


    char * Init(void)

    This function will be called when the plugin is loaded. It will return a C-style, null terminated string that will be plugin's displayed name. This will be used for dependency checking and reporting.

    void Close(void)
    
    This function is called when the plugin is no longer needed. It is guaranteed that this function will be called in once after Init before Init is called again. Ideally it will be called once for every time Init is called as well, but in the case of a crash this obviously will not happen.
    
    int GetNumFunctions(void)

    This function must return the number of functions to be exposed to script.

    char ** GetFunctionNames(void)

    This function must return a pointer to an array of function names to be exposed to script. These names will be used directly as function names in script. The array must contain the same number of elements as returned by getNumFunctions(), and the names must be null terminated, C-style strings.

    void ** GetFunctions(void)

    This function must return a pointer to an array of functions to be exposed to script. The functions pointed to must take v8::Arguments& as an argument, and return v8::Handle<v8::Value>. The functions will be directly exposed to script, no checks will be performed before or after calling them.
    
    int GetNumVariables(void)

    This function must return the number of functions to be defined in script.

    char ** GetVariableNames(void)

    This function must return a pointer to an array of the names of variables to be defined in scripts. The names will be used directly as variable names in script. It is standard for these variables to have all-caps names with underscores between words. There should not be any special characters, spaces, commas, periods, etc., in the names. Do not expect the names to be validated before use.

    v8::Handle<v8::Value>* GetVariables(void)

    This function must return an array of all variables to be defined in script. Any type of V8 handle that can be returned as a value to script can be used (i.e., v8::Number, v8::Integer, v8::Utf8Value, etc.).