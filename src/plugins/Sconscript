import os
import sys

full_import_list ="globalenv localenv IsLinux IsWindows IsDarwin IsSolaris LibraryInstall compiler librarydir binarydir corelibtargets jslib"
local_export_list ="currentenv IsLinux IsWindows IsDarwin IsSolaris LibraryInstall compiler librarydir binarydir corelibtargets jslib"

Import(full_import_list)

# Call Scons (or alternatively make) on all the plugin directories that have appropriate sconscripts or makefiles.

plugin_directory = os.getcwd()

# TODO: add better make/gmake compatibility, especially about the environment.

for d in os.listdir(plugin_directory):

  currentenv = globalenv.Clone()

  currentenv.Append(CPPDEFINES = ["USE_PNG"])

  if os.path.exists(os.path.join(os.path.join(plugin_directory, d), 'SConscript')):
    print "Using Scons on "+os.path.join(os.path.join(plugin_directory, d))
    SConscript(dirs=[os.path.join(plugin_directory, d)], exports = local_export_list)
  elif os.path.exists(os.path.join(os.path.join(plugin_directory, d), 'makefile')) or os.path.exists(os.path.join(os.path.join(plugin_directory, d), 'Makefile')):
    print "Using Make on "+os.path.join(os.path.join(plugin_directory, d))
    if os.path.exists(os.path.join(os.path.join(plugin_directory, d), 'configure')):
      print "Running configure..."
      os.system(os.path.join(os.path.join(plugin_directory, d), "configure"))
    print "Running make..."
    os.system("make -C " + os.path.join(plugin_directory, d))

